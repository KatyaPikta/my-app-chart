apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: redis
spec:
  replicas: 1 # нет скейла
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        {{- include "my-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: redis
        image: "{{ .Values.image.redis.repository }}:{{ .Values.image.redis.tag }}"
        imagePullPolicy: {{ .Values.image.redis.pullPolicy }}
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        command: ["redis-server", "--appendonly", "yes"]
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.resources.redis | nindent 12 }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: redis
spec:
  type: {{ .Values.service.redis.type }}
  ports:
    - port: {{ .Values.service.redis.port }}
      targetPort: {{ .Values.service.redis.targetPort }}
      protocol: TCP
  selector:
    app: redis

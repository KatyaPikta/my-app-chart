apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        {{- include "my-app.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-redis
        image: busybox:1.35  
        command: ['sh', '-c', 'until nc -z redis 6379; do echo "Waiting for Redis..."; sleep 2; done; echo "Redis ready"']
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z db 3306; do echo "Waiting for MySQL..."; sleep 2; done; echo "MySQL ready"']
      containers:
      - name: backend
        image: "{{ .Values.image.backend.repository }}:{{ .Values.image.backend.tag }}"
        imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "development"
        - name: MYSQL_USER
          value: "{{ .Values.env.db.user }}"
        - name: MYSQL_PASSWORD
          value: "{{ .Values.env.db.password }}"
        - name: MYSQL_HOST
          value: "{{ .Values.env.db.host }}"
        - name: MYSQL_DB
          value: "{{ .Values.env.db.database }}"
        - name: MYSQL_PORT
          value: "{{ .Values.env.db.port }}"
        - name: REDIS_HOST
          value: "{{ .Values.env.redis.host }}"
        - name: REDIS_PORT
          value: "{{ .Values.env.redis.port }}"
        - name: FE_HOST
          value: "{{ .Values.env.frontend.host }}"
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.resources.backend | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: backend
spec:
  type: {{ .Values.service.backend.type }}
  ports:
    - port: {{ .Values.service.backend.port }}
      targetPort: {{ .Values.service.backend.targetPort }}
      protocol: TCP
  selector:
    app: backend
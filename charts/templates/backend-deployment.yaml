apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
        {{- include "my-app.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-redis
        image: busybox:1.35  
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-redis 6379; do echo "Waiting for Redis..."; sleep 2; done; echo "Redis ready"']
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-mysql 3306; do echo "Waiting for MySQL..."; sleep 2; done; echo "MySQL ready"']
      containers:
      - name: {{ .Release.Name }}-backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-configmap
        - secretRef:
            name: {{ .Release.Name }}-secret
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
  selector:
    app: {{ .Release.Name }}-backend